name: Publish to NPM

on:
  workflow_dispatch:
  push:
    tags:
        - v*

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    outputs:
      release_uploaded: ${{ steps.release.outputs.uploaded }}

    steps:
      - name: Check if this is the latest tag
        id: semver-check
        run: |
          LATEST_TAG=$(git tag --list 'v*' --sort=-v:refname | head -n1)
          echo "Latest tag: $LATEST_TAG"
          echo "Current ref: ${{ github.ref_name }}"
          if [ "$LATEST_TAG" != "${{ github.ref_name }}" ]; then
            echo "Not the latest tag, skipping workflow."
            exit 78  # Special code to mark as neutral in GitHub Actions
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build the project
        run: bun run build

      - name: "Create GitHub Release"
        id: release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          draft: true
  approve-and-publish:
    needs: build-and-release
    runs-on: ubuntu-latest
    environment: npm-publish
      # This will require manual approval in the GitHub UI
      # You can set up this environment in your repo settings
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
        
      - name: Install dependencies
        run: bun install

      - name: Build the project
        run: bun run build

      - name: "Publish to NPM"
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}